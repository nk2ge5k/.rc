
if-shell -b '[[ "$(command -v skotty)" -eq "" ]]' {
  # Remove SSH_AUTH_SOCK to disable tmux automatically resetting the variable
  set -g update-environment "DISPLAY SSH_ASKPASS SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"
  # Use a symlink to look up SSH authentication
  set-environment -g 'SSH_AUTH_SOCK' ~/.ssh/ssh_auth_sock
}

set-option -g history-limit 100000
set-option -g display-time 5000

set-option -g focus-events on

# set tmux prefix to <Ctrl>-a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

set -g default-terminal "screen-256color"
set-option -ga terminal-overrides ",*-256color:Tc"

bind r source-file ~/.tmux.conf \; display "Reloaded!"

# VIM mode
set -g mode-keys vi

# vim-like bindings for switching between panes
bind-key -r -T prefix l select-pane -R
bind-key -r -T prefix h select-pane -L
bind-key -r -T prefix k select-pane -U
bind-key -r -T prefix j select-pane -D

# bind-key -r -T prefix L resize-pane -R 10
# bind-key -r -T prefix H resize-pane -L 10
bind-key -r -T prefix K resize-pane -U 10
bind-key -r -T prefix J resize-pane -D 10

bind-key -r -T prefix p last-window
bind-key -r -T prefix L next-window
bind-key -r -T prefix H previous-window

bind-key    -T prefix C new-window -c "#{session_path}"
bind-key    -T prefix c new-window -c "#{pane_current_path}"
bind-key    -T prefix s split-window -h -c "#{pane_current_path}"
bind-key    -T prefix i split-window -c "#{pane_current_path}"

bind-key -r -T prefix g popup -w60% -h80% -E \
  "tmux new -c $HOME -A -s scratch -n scratch"
bind-key -r -T prefix t popup -w60% -h80% -E \
  "tmux new -c '#{pane_current_path}' -A -s shell -n $(tmux display-message -p '#W')"
bind-key -r -T prefix o popup -w60% -h80% -d $NOTES_HOME -E \
  "tmux new-session -A -s notes -n notes nvim"

bind-key -r -T prefix a popup -w60% -h80% -E "fish -c session"
bind-key -r -T prefix w choose-tree -G -F'#S:#W'

bind -T copy-mode-vi v send -X begin-selection
bind -T copy-mode-vi Enter send-keys -X cancel

if-shell '[[ $(uname -s) = Darwin ]]' { 
  bind -T copy-mode-vi y send-keys -X copy-pipe 'pbcopy'
} {
  bind -T copy-mode-vi y send-keys -X copy-pipe 'xclip'
}

set-option -g repeat-time 1

setw -g aggressive-resize on

set-option -g renumber-windows on

# Avoid ESC delay
set -s escape-time 0

# Fix titlebar
set -g set-titles on
set -g set-titles-string "#T"

setw -g monitor-activity on
set -g visual-activity on

# Set status bar
#set -g status-justify left

# set -g status-bg black
set -g status-fg white
set -g base-index 1
setw -g aggressive-resize on

# setw -g window-status-format " #I #W "
# setw -g window-status-current-format " #I #W "

set -g status-right-length 128
set -g status-right "#[bg=default,fg=colour7,reverse]▓▓▒▒░░ #(df -h / | awk '{print $4}' | tail -n 1)  #(date '+%Y-%m-%d %H:%M') "
set -g status-interval 60

set -g status-style fg=colour16

set -g status-left-length 31
set -g message-style bg=colour3,fg=black
set -g window-status-bell-style fg=colour3,blink
set -g window-status-activity-style fg=colour7,italics
# set -g window-status-last-style fg=colour250
# set -g window-status-separator "#[bg=colour8] #[default]"
# set -g window-status-style fg=colour251
set-window-option -g window-active-style bg=terminal
set-window-option -g window-style bg=terminal

setw -g window-status-format "#[bg=default,fg=colour7,reverse]▓▒░ #I #W ░▒▓"
setw -g window-status-current-format "#[bg=default,fg=colour10,reverse]▓▒░ #I #W ░▒▓"

set -g status-left ' #h    '
